{"version":3,"file":"index.js","sources":["../src/createrouter/sortobjectkey.ts","../src/createrouter/createbaserouter.ts","../src/createrouter/hashrouter/gethashparams.ts","../src/createrouter/hashrouter/createurl.ts","../src/createrouter/hashrouter/gethashhref.ts","../src/createrouter/hashrouter/sethashparams.ts","../src/createrouter/hashrouter/transformhashparams.ts","../src/createrouter/hashrouter/createhashrouter.ts","../src/createrouter/pathrouter/createurl.ts","../src/createrouter/pathrouter/createpathrouter.ts","../src/createrouter/searchrouter/getsearchparams.ts","../src/createrouter/searchrouter/createurl.ts","../src/createrouter/searchrouter/getsearchhref.ts","../src/createrouter/searchrouter/setsearchparams.ts","../src/createrouter/searchrouter/transformsearchparams.ts","../src/createrouter/searchrouter/createsearchrouter.ts","../src/components/createclickhandler.tsx","../src/components/isModifiedEvent.tsx","../src/components/react/createReactParamsHook.tsx","../src/components/react/create-react-link.tsx","../src/createrouter/matchroute.ts","../src/components/isrouterecord.ts","../src/components/navigate.ts","../src/createrouter/isRecordRedirect.ts","../src/createrouter/isRecordRoute.ts","../src/components/react/create-react-view.tsx","../src/components/vue/createVueParamsHook.tsx","../src/components/vue/create-vue-link.tsx","../src/components/vue/create-vue-view.tsx"],"sourcesContent":["export function serilizesortobjectkey(o: Record<string, string>): string {\n    return String(\n        new URLSearchParams(\n            Object.entries(o).sort(([key], [b]) => {\n                return key > b ? 1 : -1;\n            })\n        )\n    );\n}\nconst serilizeparams = serilizesortobjectkey;\nexport { serilizeparams };\n\nexport function deserilizeparams(a: string) {\n    return Object.fromEntries(new URLSearchParams(a));\n}\n","//@ts-ignore\n\nimport EventEmitterTargetClass, {\n    EventEmitterTarget,\n} from \"@masx200/event-emitter-target\";\n//@ts-ignore\nimport debounce from \"lodash/debounce.js\";\nimport { Router } from \"./Router\";\nimport { RawRouter } from \"./Router\";\nexport type Routeroptions = {\n    toStringTag: string;\n    eventname: string;\n    gethref: (\n        to:\n            | Record<string, string>\n            | ((old: Record<string, string>) => Record<string, string>)\n    ) => string;\n    setparams: (opt: Record<string, string>) => void;\n    getparams: () => {\n        [k: string]: string;\n    };\n    transformparams: (\n        opt: (old: Record<string, string>) => Record<string, string>\n    ) => void;\n};\n\nexport function createBaseRouter({\n    toStringTag,\n    eventname,\n    gethref,\n    setparams,\n    getparams,\n    transformparams,\n}: Routeroptions): Router {\n    let mountcount = 0;\n    // const eventname = \"search\" === type ? \"popstate\" : \"hashchange\";\n\n    const emitter: EventEmitterTarget = EventEmitterTargetClass();\n\n    const changelistener = debounce(() => {\n        const params = getparams();\n        // const params = \"hash\" === type ? gethashparams() : getsearchparams();\n        instance.emit(\"params\", params);\n    });\n    function mount() {\n        window.addEventListener(eventname, changelistener);\n\n        changelistener();\n        mountcount++;\n    }\n    function unmount() {\n        mountcount--;\n        if (mountcount <= 0) {\n            window.removeEventListener(eventname, changelistener);\n            changelistener.cancel();\n            instance.removeAllListeners(\"params\");\n        }\n    }\n\n    const router: RawRouter = {\n        mount,\n        unmount,\n        gethref: gethref,\n        // gethref: \"hash\" === type ? gethashhref : getsearchhref,\n\n        setparams: setparams,\n        // setparams: \"hash\" === type ? sethashparams : setsearchparams,\n        getparams: getparams,\n        transformparams,\n        // getparams: \"hash\" === type ? gethashparams : getsearchparams,\n        // transformparams:\n        //     \"hash\" === type ? transformhashparams : transformsearchparams,\n        [Symbol.toStringTag]: toStringTag,\n        // [Symbol.toStringTag]: \"search\" === type ? \"SearchRouter\" : \"HashRouter\",\n    };\n\n    const instance: Router = {\n        ...emitter,\n        ...router,\n        toStringTag,\n        eventname,\n        gethref,\n        setparams,\n        getparams,\n        transformparams,\n    } as Router;\n\n    return instance as Router;\n}\n","export function gethashparams() {\n    return (\n        (location.hash &&\n            Object.fromEntries(new URLSearchParams(location.hash.slice(1)))) ||\n        {}\n    );\n}\n","import { serilizesortobjectkey } from \"../sortobjectkey\";\n\nexport function createurl(opt: Record<string, string>) {\n    let url = new URL(location.href);\n\n    url.hash = serilizesortobjectkey({ ...opt });\n    return url;\n}\n","//@ts-ignore\nimport { gethashparams } from \"./gethashparams.ts\";\nimport { createurl } from \"./createurl\";\n\nexport function gethashhref(\n    to:\n        | Record<string, string>\n        | ((old: Record<string, string>) => Record<string, string>)\n): string {\n    if (!to) {\n        throw new TypeError(\"object,function\");\n    }\n\n    if (\"function\" === typeof to) {\n        let params: {\n            [k: string]: string;\n        } = gethashparams();\n\n        params = to(params);\n        let url = createurl(params);\n        return url.href;\n    }\n    if (\"object\" === typeof to) {\n        let url = createurl(to);\n        return url.href;\n    }\n    throw new TypeError(\"object,function\");\n}\n","import { createurl } from \"./createurl\";\n\nexport function sethashparams(opt: Record<string, string>) {\n    const oldhash = location.hash;\n    let url = createurl(opt);\n\n    if (oldhash === url.hash) {\n        return;\n    }\n    history.pushState({}, \"\", url.href);\n\n    window.dispatchEvent(new Event(\"hashchange\"));\n}\n","//@ts-ignore\nimport { gethashparams } from \"./gethashparams.ts\"; //@ts-ignore\nimport { sethashparams } from \"./sethashparams.ts\";\nexport function transformhashparams(\n    opt: (old: Record<string, string>) => Record<string, string>\n) {\n    sethashparams(opt(gethashparams()));\n}\n","//@ts-ignore\nimport { createBaseRouter } from \"../createbaserouter\";\nimport { Router } from \"../Router\";\nimport { gethashhref } from \"./gethashhref\";\nimport { gethashparams } from \"./gethashparams\";\nimport { sethashparams } from \"./sethashparams\";\nimport { transformhashparams } from \"./transformhashparams\";\nexport type { Router };\nexport function createHashRouter(): Router {\n    const opts = {\n        toStringTag: \"HashRouter\",\n        eventname: \"hashchange\",\n        gethref: gethashhref,\n\n        setparams: sethashparams,\n        getparams: gethashparams,\n        transformparams: transformhashparams,\n    };\n    return createBaseRouter(opts);\n}\n","import { serilizesortobjectkey } from \"../sortobjectkey\";\n\nexport function createurl(opt: Record<string, string>) {\n    if (Object.keys(opt).length === 0) {\n        let url = new URL(\"./\", location.href);\n        return url;\n    }\n    let url = new URL(serilizesortobjectkey({ ...opt }), location.href);\n    return url;\n}\n","import { createBaseRouter } from \"../createbaserouter\";\nimport { Router } from \"../Router\";\nimport { createurl } from \"./createurl\";\n\nexport function createPathRouter(): Router {\n    const opts = {\n        toStringTag: \"PathRouter\",\n        eventname: \"popstate\",\n        gethref: gethref,\n\n        setparams: setparams,\n        getparams: getparams,\n        transformparams: transformparams,\n    };\n    return createBaseRouter(opts);\n}\nfunction gethref(\n    to:\n        | Record<string, string>\n        | ((old: Record<string, string>) => Record<string, string>)\n): string {\n    if (!to) {\n        throw new TypeError(\"object,function\");\n    }\n\n    if (\"function\" === typeof to) {\n        let params: {\n            [k: string]: string;\n        } = getparams();\n\n        params = to(params);\n        let url = createurl(params);\n\n        return url.href;\n    }\n    if (\"object\" === typeof to) {\n        let url = createurl(to);\n        return url.href;\n    }\n    throw new TypeError(\"object,function\");\n}\nfunction getparams(): {\n    [k: string]: string;\n} {\n    var a = location.pathname.split(\"/\");\n    var b = a[a.length - 1];\n    return (b && Object.fromEntries(new URLSearchParams(b))) || {};\n}\nfunction setparams(opt: Record<string, string>) {\n    const oldpathname = location.pathname;\n\n    let url = createurl(opt);\n    if (oldpathname === url.pathname) {\n        return;\n    }\n    history.pushState({}, \"\", url.href);\n\n    window.dispatchEvent(new Event(\"popstate\"));\n}\nfunction transformparams(\n    opt: (old: Record<string, string>) => Record<string, string>\n) {\n    setparams(opt(getparams()));\n}\n","export function getsearchparams() {\n    return (\n        (location.search &&\n            Object.fromEntries(new URL(location.href).searchParams)) ||\n        {}\n    );\n}\n","import { serilizesortobjectkey } from \"../sortobjectkey\";\n\nexport function createurl(opt: Record<string, string>) {\n    let url = new URL(location.href);\n\n    url.search = serilizesortobjectkey({ ...opt });\n    return url;\n}\n","//@ts-ignore\nimport { getsearchparams } from \"./getsearchparams.ts\";\nimport { createurl } from \"./createurl\";\n\nexport function getsearchhref(\n    to:\n        | Record<string, string>\n        | ((old: Record<string, string>) => Record<string, string>)\n): string {\n    if (!to) {\n        throw new TypeError(\"object,function\");\n    }\n\n    if (\"function\" === typeof to) {\n        let params: {\n            [k: string]: string;\n        } = getsearchparams();\n\n        params = to(params);\n        let url = createurl(params);\n        return url.href;\n    }\n    if (\"object\" === typeof to) {\n        let url = createurl(to);\n        return url.href;\n    }\n    throw new TypeError(\"object,function\");\n}\n","import { createurl } from \"./createurl\";\n\nexport function setsearchparams(opt: Record<string, string>) {\n    const oldsearch = location.search;\n\n    let url = createurl(opt);\n    if (oldsearch === url.search) {\n        return;\n    }\n    history.pushState({}, \"\", url.href);\n\n    window.dispatchEvent(new Event(\"popstate\"));\n}\n","//@ts-ignore\nimport { getsearchparams } from \"./getsearchparams.ts\"; //@ts-ignore\nimport { setsearchparams } from \"./setsearchparams.ts\";\nexport function transformsearchparams(\n    opt: (old: Record<string, string>) => Record<string, string>\n) {\n    setsearchparams(opt(getsearchparams()));\n}\n","//@ts-ignore\n//@ts-ignore\n\nimport { createBaseRouter } from \"../createbaserouter\";\nimport { Router } from \"../Router\";\n//@ts-ignore\nimport { getsearchhref } from \"./getsearchhref\";\n//@ts-ignore\nimport { getsearchparams } from \"./getsearchparams\"; //\n//@ts-ignore\nimport { setsearchparams } from \"./setsearchparams\"; //@ts-ignore\nimport { transformsearchparams } from \"./transformsearchparams\";\nexport type { Router };\n\nexport function createSearchRouter(): Router {\n    const opts = {\n        toStringTag: \"SearchRouter\",\n        eventname: \"popstate\",\n        gethref: getsearchhref,\n\n        setparams: setsearchparams,\n        getparams: getsearchparams,\n        transformparams: transformsearchparams,\n    };\n    return createBaseRouter(opts);\n}\n","import { MouseEvent } from \"react\";\nimport { Router } from \"../createrouter/Router\";\nimport { isModifiedEvent } from \"./isModifiedEvent\";\n\nexport function createclickhandler({\n    onClick,\n    target,\n    router,\n    to,\n}: {\n    onClick?: ((event: MouseEvent) => void) | undefined;\n    target?: string | undefined;\n    router: Router;\n    to: Record<string, string>;\n}) {\n    return (event?: MouseEvent) => {\n        if (!event) {\n            router.setparams(to);\n            return;\n        }\n        try {\n            if (\"function\" === typeof onClick) {\n                onClick(event);\n            }\n        } catch (ex) {\n            event.preventDefault();\n            throw ex;\n        }\n        if (\n            !event.defaultPrevented &&\n            // onClick prevented default\n            event.button === 0 &&\n            // ignore everything but left clicks\n            (!target || target === \"_self\") &&\n            // let browser handle \"target=_blank\" etc.\n            !isModifiedEvent(event)\n            // ignore clicks with modifier keys\n        ) {\n            event.preventDefault();\n            router.setparams(to);\n        }\n    };\n}\n","export function isModifiedEvent(\n    event: MouseEvent | import(\"react\").MouseEvent\n) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n","import debounce from \"lodash/debounce.js\";\nimport { Router } from \"../../createrouter/Router\";\nimport { useState as useStateType, useEffect as useEffectType } from \"react\";\n\nexport function createReactParamsHook({\n    router,\n    useState,\n    useEffect,\n}: {\n    router: Router;\n    useState: typeof useStateType;\n    useEffect: typeof useEffectType;\n}): () => Readonly<Record<string, string>> {\n    return function (): Readonly<Record<string, string>> {\n        const [params, setparams] = useState<Record<string, string>>(\n            router.getparams()\n        );\n        useEffect(() => {\n            const paramschange = debounce((p) => {\n                setparams(p);\n            });\n            function onmount() {\n                router.mount();\n                router.on(\"params\", paramschange);\n            }\n\n            function onunmount() {\n                router.unmount();\n\n                router.off(\"params\", paramschange);\n                paramschange.cancel();\n            }\n            onmount();\n\n            return onunmount;\n        }, []);\n        return params as Readonly<Record<string, string>>;\n    };\n}\n","import isEqual from \"lodash/isEqual.js\";\nimport type {\n    ComponentType,\n    createElement as createElementType,\n    FC,\n    MouseEvent,\n    PropsWithChildren,\n    useEffect as useEffectType,\n    useState as useStateType,\n} from \"react\";\nimport { Router } from \"../../createrouter/Router\";\nimport { createclickhandler } from \"../createclickhandler\";\nimport { createReactParamsHook } from \"./createReactParamsHook\";\nexport type CustomReactLinkProps = Record<string, any> & {\n    innerRef?: { current: any } | ((current: any) => void);\n    target?: string;\n    href: string;\n    isActive: boolean;\n    navigate: (event?: MouseEvent) => void;\n};\nexport type DefaultReactLinkProps = Record<string, any> & {\n    component?: ComponentType<CustomReactLinkProps>;\n    target?: string;\n    onClick?: (event: MouseEvent) => void;\n    to: Record<string, string>;\n    innerRef?:\n        | {\n              current: any;\n          }\n        | ((current: any) => void);\n};\n\nexport function createReactLink({\n    router,\n    useState,\n    useEffect,\n    createElement,\n}: {\n    router: Router;\n    useState: typeof useStateType;\n    useEffect: typeof useEffectType;\n    createElement: typeof createElementType;\n}): FC<DefaultReactLinkProps> {\n    const useParams = createReactParamsHook({\n        router,\n        useState,\n        useEffect,\n    });\n    return function ({\n        component = linkcomponentdefault,\n        target,\n        to,\n        onClick,\n        innerRef,\n        children,\n        ...rest\n    }) {\n        const params = useParams();\n        if (!to || !(\"object\" === typeof to)) {\n            throw new TypeError(\"object\");\n        }\n        const href: string = router.gethref(to);\n\n        const isActive = isEqual(params, to);\n        const navigate = createclickhandler({\n            onClick,\n            target,\n            router,\n            to,\n        });\n        return createElement(\n            component,\n            { innerRef, target, href, isActive, navigate, ...rest },\n            children\n        );\n    };\n    function linkcomponentdefault({\n        innerRef,\n        target,\n        children,\n        href,\n        isActive,\n        navigate,\n        ...rest\n    }: PropsWithChildren<CustomReactLinkProps>) {\n        return createElement(\n            \"a\",\n            {\n                ref: innerRef,\n                target,\n                href,\n                onClick: navigate,\n                \"aria-current\": isActive ? \"page\" : \"false\",\n                ...rest,\n            },\n            children\n        );\n    }\n}\n","import { RouteRecord } from \"./RouteRecord\";\n\nexport function matchRoute(\n    routes: RouteRecord[],\n    params: Record<string, string>\n) {\n    for (let route of routes) {\n        if (route.params(params)) {\n            return route;\n        }\n    }\n    return undefined;\n}\n","function isrouterecord(o: any): boolean {\n    return !!(o && \"object\" === typeof o && \"function\" === typeof o.params);\n}\nexport { isrouterecord };\n","import { Router } from \"../createrouter/Router\";\n\nexport function navigate(\n    router: Router,\n    to:\n        | Record<string, string>\n        | ((old: Record<string, string>) => Record<string, string>)\n) {\n    if (!to) {\n        throw new TypeError(\"object,function\");\n    }\n    if (\"function\" === typeof to) {\n        router.transformparams(to);\n        return;\n    }\n    if (\"object\" === typeof to) {\n        router.setparams(to);\n        return;\n    }\n    throw new TypeError(\"object,function\");\n}\n","import { RecordRedirect } from \"./RouteRecord\";\n\nexport function isRecordRedirect(o: any): o is RecordRedirect {\n    return !!(\"function\" === typeof o?.params && o?.redirect);\n}\n","import { RecordRoute } from \"./RouteRecord\";\n\nexport function isRecordRoute(o: any): o is RecordRoute {\n    return !!(\"function\" === typeof o?.params && o?.component);\n}\n","import { matchRoute } from \"../../createrouter/matchroute\";\nimport { Router } from \"../../createrouter/Router\";\nimport { isrouterecord } from \"../isrouterecord\";\nimport { navigate } from \"../navigate\";\nimport type {\n    FC,\n    createElement as createElementType,\n    useState as useStateType,\n    useEffect as useEffectType,\n    ComponentType,\n    PropsWithChildren,\n} from \"react\";\nimport { RouteRecord } from \"../../createrouter\";\nimport { isRecordRedirect } from \"../../createrouter/isRecordRedirect\";\nimport { isRecordRoute } from \"../../createrouter/isRecordRoute\";\nimport { createReactParamsHook } from \"./createReactParamsHook\";\nexport { createReactView, createReactParamsHook };\nexport type CustomReactViewProps = {\n    component: ComponentType<any>;\n    params: Record<string, string>;\n};\n\nexport type DefaultReactViewProps = {\n    routes: RouteRecord[];\n    render?: ComponentType<CustomReactViewProps>;\n};\n\nfunction createReactView({\n    router,\n\n    createElement,\n    useState,\n    useEffect,\n}: {\n    router: Router;\n\n    createElement: typeof createElementType;\n    useState: typeof useStateType;\n    useEffect: typeof useEffectType;\n}): FC<DefaultReactViewProps> {\n    const useParams = createReactParamsHook({\n        router,\n        useState,\n        useEffect,\n    });\n    function viewrenderdefault({\n        component,\n        params,\n    }: PropsWithChildren<CustomReactViewProps>) {\n        //@ts-ignore\n        return createElement(component, { params });\n    }\n    return ({ routes, render = viewrenderdefault }) => {\n        if (!Array.isArray(routes)) {\n            throw new TypeError(\"array\");\n        }\n        if (\n            !routes.every((o) => {\n                return isrouterecord(o);\n            })\n        ) {\n            throw new TypeError('{params:\"function\"}');\n        }\n\n        const params = useParams();\n        const currentroute = matchRoute(routes, params);\n        if (isRecordRedirect(currentroute)) {\n            const redirect = currentroute.redirect;\n\n            navigate(router, redirect);\n\n            return null;\n        }\n        if (isRecordRoute(currentroute)) {\n            const Component = currentroute.component as ComponentType<any>;\n\n            const props = { component: Component };\n            let oprops = Object.assign({}, props, { params });\n            //@ts-ignore\n            return createElement(render, { ...oprops });\n        } else {\n            return null;\n        }\n    };\n}\n","import { ref as refType } from \"@vue/runtime-dom\";\nimport debounce from \"lodash/debounce.js\";\nimport { Router } from \"../../createrouter/Router\";\n\nexport function createVueParamsHook({\n    router,\n    ref,\n    onMounted,\n    onUnmounted,\n    readonly,\n}: {\n    readonly: typeof import(\"@vue/runtime-dom\").readonly;\n    onMounted: typeof import(\"@vue/runtime-dom\").onMounted;\n    router: Router;\n    ref: typeof refType;\n    onUnmounted: typeof import(\"@vue/runtime-dom\").onUnmounted;\n}): () => {\n    readonly value: {\n        readonly [x: string]: string;\n    };\n} {\n    return function () {\n        const params = ref(router.getparams());\n        const paramschange = debounce((p) => {\n            params.value = p;\n        });\n        function onmount() {\n            router.mount();\n            router.on(\"params\", paramschange);\n        }\n\n        function onunmount() {\n            router.unmount();\n\n            router.off(\"params\", paramschange);\n            paramschange.cancel();\n        }\n        onMounted(onmount);\n        onUnmounted(onunmount);\n        return readonly(params);\n    };\n}\n","import type {\n    Component,\n    defineComponent as defineComponentType,\n    h as hType,\n    ref as refType,\n    resolveComponent as resolveComponentType,\n    SetupContext,\n} from \"@vue/runtime-dom\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { Router } from \"../../createrouter/Router\";\nimport { createclickhandler } from \"../createclickhandler\";\nimport { createVueParamsHook } from \"./createVueParamsHook\";\nexport { createVueLink };\n\nexport type CustomVueLinkProps = Record<string, any> & {\n    innerRef?: { value: any } | ((value: any) => void);\n    target?: string;\n    href: string;\n    isActive: boolean;\n    navigate: (event?: MouseEvent) => void;\n};\nexport type DefaultVueLinkProps = Record<string, any> & {\n    component?: \"string\" | Component<CustomVueLinkProps>;\n    to: Record<string, string>;\n    onClick?: (event: MouseEvent) => void;\n    target?: string;\n    innerRef?:\n        | ((r: any) => void)\n        | {\n              value: any;\n          };\n};\n\nfunction createVueLink({\n    router,\n    resolveComponent,\n    defineComponent,\n    h: createElement,\n    ref,\n    onMounted,\n    onUnmounted,\n    readonly,\n}: {\n    ref: typeof refType;\n    readonly: typeof import(\"@vue/runtime-dom\").readonly;\n    onMounted: typeof import(\"@vue/runtime-dom\").onMounted;\n    onUnmounted: typeof import(\"@vue/runtime-dom\").onUnmounted;\n    resolveComponent: typeof resolveComponentType;\n    router: Router;\n    defineComponent: typeof defineComponentType;\n    h: typeof hType;\n}): Component<DefaultVueLinkProps> {\n    const useParams = createVueParamsHook({\n        router,\n        ref,\n        onMounted,\n        onUnmounted,\n        readonly,\n    });\n\n    function linkcomponentdefault(\n        { innerRef, target, href, navigate, isActive }: CustomVueLinkProps,\n        { slots: children }: SetupContext\n    ) {\n        return createElement(\n            //@ts-ignore\n            \"a\",\n            {\n                ref: innerRef,\n                target,\n                href,\n                onClick: navigate,\n                \"aria-current\": isActive ? \"page\" : \"false\",\n            },\n            children\n        );\n    }\n\n    linkcomponentdefault.inheritAttrs = true;\n\n    linkcomponentdefault.props = [\n        \"innerRef\",\n        \"target\",\n        \"href\",\n        \"isActive\",\n        \"navigate\",\n    ];\n\n    //@ts-ignore\n    const Link: Component<DefaultVueLinkProps> = defineComponent({\n        inheritAttrs: true,\n        props: [\"component\", \"to\", \"target\", \"onClick\", \"innerRef\"],\n        setup(props: DefaultVueLinkProps, { slots: children }) {\n            const params = useParams();\n            return () => {\n                const {\n                    component = linkcomponentdefault,\n                    to,\n                    onClick,\n                    target,\n                    innerRef: innerRef,\n                } = props;\n\n                if (!to || !(\"object\" === typeof to)) {\n                    throw new TypeError(\"object\");\n                }\n                const href: string = router.gethref(to);\n                const navigate = createclickhandler({\n                    //@ts-ignore\n                    onClick,\n                    //@ts-ignore\n                    target,\n                    router,\n                    //@ts-ignore\n                    to,\n                });\n                const isActive = isEqual(params.value, to);\n                const reffun =\n                    \"function\" === typeof innerRef\n                        ? innerRef\n                        : innerRef && \"object\" === typeof innerRef\n                        ? (e: any) => {\n                              Reflect.set(innerRef, \"value\", e);\n                          }\n                        : undefined;\n\n                const Resolvedcomponent =\n                    \"string\" === typeof component\n                        ? resolveComponent(component)\n                        : component;\n\n                return createElement(\n                    //@ts-ignore\n                    Resolvedcomponent,\n                    { isActive, innerRef: reffun, href, navigate, target },\n                    children\n                );\n            };\n        },\n    }) as Component<DefaultVueLinkProps>;\n    return Link;\n}\n","import type {\n    Component,\n    defineComponent as defineComponentType,\n    h as hType,\n    ref as refType,\n    resolveComponent as resolveComponentType,\n} from \"@vue/runtime-dom\";\nimport { isRecordRedirect } from \"../../createrouter/isRecordRedirect\";\nimport { isRecordRoute } from \"../../createrouter/isRecordRoute\";\nimport { matchRoute } from \"../../createrouter/matchroute\";\nimport { Router } from \"../../createrouter/Router\";\nimport { RouteRecord } from \"../../createrouter/RouteRecord\";\nimport { isrouterecord } from \"../isrouterecord\";\nimport { navigate } from \"../navigate\";\nimport { createVueParamsHook } from \"./createVueParamsHook\";\nexport { createVueView, createVueParamsHook };\nexport type CustomVueViewProps = {\n    component: Component<any>;\n    params: Record<string, string>;\n};\n\nexport type DefaultVueViewProps = {\n    routes: RouteRecord[];\n    render?: string | Component<CustomVueViewProps>;\n};\n\nfunction createVueView({\n    readonly,\n    onMounted,\n    onUnmounted,\n    router,\n    resolveComponent,\n    defineComponent,\n    h: createElement,\n    ref,\n}: {\n    readonly: typeof import(\"@vue/runtime-dom\").readonly;\n    onMounted: typeof import(\"@vue/runtime-dom\").onMounted;\n    onUnmounted: typeof import(\"@vue/runtime-dom\").onUnmounted;\n    resolveComponent: typeof resolveComponentType;\n    router: Router;\n    defineComponent: typeof defineComponentType;\n    h: typeof hType;\n    ref: typeof refType;\n}): Component<DefaultVueViewProps> {\n    const useParams = createVueParamsHook({\n        router,\n        ref,\n        onMounted,\n        onUnmounted,\n        readonly,\n    });\n    function viewrenderdefault({ component, params }: CustomVueViewProps) {\n        //@ts-ignore\n        return createElement(component, { params });\n    }\n    viewrenderdefault.props = [\"params\", \"component\"];\n    viewrenderdefault.inheritAttrs = false;\n    return defineComponent({\n        props: [\"routes\", \"render\"],\n        inheritAttrs: false,\n        setup(props: DefaultVueViewProps) {\n            //attrs不是响应式对象\n\n            const params = useParams();\n            return () => {\n                const { routes, render = viewrenderdefault } = props;\n                //attrs可能属性有变化\n                if (!Array.isArray(routes)) {\n                    throw new TypeError(\"array\");\n                }\n                if (\n                    !routes.every((o) => {\n                        return isrouterecord(o);\n                    })\n                ) {\n                    throw new TypeError('{params:\"function\"}');\n                }\n\n                const currentroute = matchRoute(routes, params.value);\n                if (isRecordRedirect(currentroute)) {\n                    const redirect = currentroute.redirect;\n\n                    navigate(router, redirect);\n\n                    return null;\n                }\n                if (isRecordRoute(currentroute)) {\n                    const Component = currentroute.component as Component<any>;\n                    let Resolvedcomponent =\n                        \"string\" === typeof Component\n                            ? resolveComponent(Component)\n                            : Component;\n                    let props = { component: Resolvedcomponent };\n                    let oprops = Object.assign({}, props, {\n                        params: params.value,\n                    });\n\n                    let rendercomponent =\n                        \"string\" === typeof render\n                            ? resolveComponent(render)\n                            : render;\n\n                    return createElement(\n                        //@ts-ignore\n                        rendercomponent,\n                        { ...oprops }\n\n                        // )\n                    );\n                } else {\n                    return null;\n                }\n            };\n        },\n    });\n}\n"],"names":["serilizesortobjectkey","o","String","URLSearchParams","Object","entries","sort","serilizeparams","deserilizeparams","a","fromEntries","createBaseRouter","toStringTag","eventname","gethref","setparams","getparams","transformparams","mountcount","emitter","EventEmitterTargetClass","changelistener","debounce","params","instance","emit","router","mount","window","addEventListener","unmount","removeEventListener","cancel","removeAllListeners","Symbol","gethashparams","location","hash","slice","createurl","opt","url","URL","href","gethashhref","to","TypeError","sethashparams","oldhash","history","pushState","dispatchEvent","Event","transformhashparams","createHashRouter","keys","length","createPathRouter","pathname","split","b","oldpathname","getsearchparams","search","searchParams","getsearchhref","setsearchparams","oldsearch","transformsearchparams","createSearchRouter","createclickhandler","onClick","target","event","ex","preventDefault","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","createReactParamsHook","useState","useEffect","paramschange","p","on","off","createReactLink","createElement","useParams","component","linkcomponentdefault","innerRef","children","rest","isActive","isEqual","navigate","ref","matchRoute","routes","route","isrouterecord","isRecordRedirect","redirect","isRecordRoute","createReactView","viewrenderdefault","render","Array","isArray","every","currentroute","props","oprops","assign","createVueParamsHook","onMounted","onUnmounted","readonly","value","createVueLink","resolveComponent","defineComponent","h","slots","inheritAttrs","setup","reffun","e","Reflect","set","undefined","Resolvedcomponent","createVueView","Component","rendercomponent"],"mappings":"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"}