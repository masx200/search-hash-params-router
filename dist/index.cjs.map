{"version":3,"file":"index.cjs","sources":["../src/createrouter/hashrouter/sethashparams.ts","../src/createrouter/hashrouter/gethashparams.ts","../src/createrouter/hashrouter/transformhashparams.ts","../src/createrouter/hashrouter/gethashhref.ts","../node_modules/.pnpm/@masx200+event-emitter-target@1.1.7/node_modules/@masx200/event-emitter-target/dist/index.js","../src/createrouter/searchrouter/getsearchparams.ts","../src/createrouter/searchrouter/getsearchhref.ts","../src/createrouter/searchrouter/setsearchparams.ts","../src/createrouter/searchrouter/transformsearchparams.ts","../src/createrouter/hashrouter/createhashrouter.ts","../src/components/react/create-react-link.tsx","../src/createrouter/searchrouter/createsearchrouter.ts"],"sourcesContent":["export function sethashparams(opt: Record<string, string>) {\n    const oldhash = location.hash;\n    let url = new URL(location.href);\n\n    url.hash = String(new URLSearchParams({ ...opt }));\n\n    if (oldhash === url.hash) {\n        return;\n    }\n    history.pushState({}, \"\", url.href);\n\n    window.dispatchEvent(new Event(\"hashchange\"));\n}\n","export function gethashparams() {\n    return (\n        (location.hash &&\n            Object.fromEntries(new URLSearchParams(location.hash.slice(1)))) ||\n        {}\n    );\n}\n","//@ts-ignore\nimport { gethashparams } from \"./gethashparams.ts\"; //@ts-ignore\nimport { sethashparams } from \"./sethashparams.ts\";\nexport function transformhashparams(\n    opt: (old: Record<string, string>) => Record<string, string>\n) {\n    sethashparams(opt(gethashparams()));\n}\n","//@ts-ignore\nimport { gethashparams } from \"./gethashparams.ts\";\n\nexport function gethashhref(\n    to:\n        | Record<string, string>\n        | ((old: Record<string, string>) => Record<string, string>)\n): string {\n    if (!to) {\n        throw new TypeError(to);\n    }\n    let params: {\n        [k: string]: string;\n    } = gethashparams();\n    let url = new URL(location.href);\n\n    if (\"function\" === typeof to) {\n        params = to(params);\n        url.hash = String(new URLSearchParams({ ...to }));\n        return url.href;\n    }\n    if (\"object\" === typeof to) {\n        params = to;\n        url.hash = String(new URLSearchParams({ ...to }));\n        return url.href;\n    }\n    throw new TypeError(to);\n}\n","function t(){return{}.toString.call({[Symbol.toStringTag]:\"EventEmitterTarget\"})}function e(t){if(\"string\"!=typeof t&&\"symbol\"!=typeof t)throw new TypeError(\" EVENTNAME expected: string | symbol;but invalid :\"+t)}function n(t){if(\"function\"!=typeof t)throw new TypeError(\" EVENTLISTENER expected: (event?: any) => void;but invalid:\"+t)}function o(){const o=new Map,r=new WeakMap;function i(t){let e=o.get(t);return e||(e=new Set,o.set(t,e)),e}function c(t){e(t),o.has(t)&&i(t).clear()}function s(t,n){e(t),o.has(t)&&i(t).forEach(t=>{Promise.resolve().then(()=>{t(n)})})}function u(t,o){e(t),n(o),i(t).add(o)}function f(t,e){i(t).delete(e)}function a(t,o){e(t),n(o),f(t,o),function(t,e){const n=i(t);let o=r.get(e);o&&n.delete(o)}(t,o)}function l(){return[...o].map(([t,e])=>[t,[...e]])[Symbol.iterator]()}return{[Symbol.toPrimitive]:t,[Symbol.toStringTag]:\"EventEmitterTarget\",[Symbol.iterator]:l,entries:l,listenerCount:function(t){return e(t),o.has(t)?i(t).size:0},clear:c,removeAllListeners:c,on:u,addListener:u,off:a,removeListener:a,once:function(t,o){e(t),n(o);let i=!1,c=r.get(o);if(!c){const e=n=>{f(t,e),f(t,o),i||(i=!0,o(n))};c=e,r.set(o,c)}f(t,o),u(t,c)},emit:s,dispatch:s,eventNames:function(){return[...o.keys()]},listeners:function(t){return e(t),o.has(t)?[...i(t)]:[]}}}const r=(t=>{var e=Symbol(),n=new Function(\"return async()=>{}\")()();function r(){const t=o();return this&&this instanceof r?(Object.assign(this,t),this):Reflect.construct(r,[])}return Reflect.set(r,e,n),r})();export default r;\n//# sourceMappingURL=index.js.map\n","export function getsearchparams() {\n    return (\n        (location.search &&\n            Object.fromEntries(new URL(location.href).searchParams)) ||\n        {}\n    );\n}\n","//@ts-ignore\nimport { getsearchparams } from \"./getsearchparams.ts\";\n\nexport function getsearchhref(\n    to:\n        | Record<string, string>\n        | ((old: Record<string, string>) => Record<string, string>)\n): string {\n    if (!to) {\n        throw new TypeError(to);\n    }\n    let params: {\n        [k: string]: string;\n    } = getsearchparams();\n    let url = new URL(location.href);\n\n    if (\"function\" === typeof to) {\n        params = to(params);\n        url.search = String(new URLSearchParams({ ...to }));\n        return url.href;\n    }\n    if (\"object\" === typeof to) {\n        params = to;\n        url.search = String(new URLSearchParams({ ...to }));\n        return url.href;\n    }\n    throw new TypeError(to);\n}\n","export function setsearchparams(opt: Record<string, string>) {\n    const oldsearch = location.search;\n    let url = new URL(location.href);\n\n    url.search = String(new URLSearchParams({ ...opt }));\n\n    if (oldsearch === url.search) {\n        return;\n    }\n    history.pushState({}, \"\", url.href);\n\n    window.dispatchEvent(new Event(\"popstate\"));\n}\n","//@ts-ignore\nimport { getsearchparams } from \"./getsearchparams.ts\"; //@ts-ignore\nimport { setsearchparams } from \"./setsearchparams.ts\";\nexport function transformsearchparams(\n    opt: (old: Record<string, string>) => Record<string, string>\n) {\n    setsearchparams(opt(getsearchparams()));\n}\n","//@ts-ignore\nimport { sethashparams } from \"./sethashparams.ts\"; //@ts-ignore\nimport { gethashparams } from \"./gethashparams.ts\"; //@ts-ignore\nimport { transformhashparams } from \"./transformhashparams.ts\";\nimport { Router } from \"../Router\";\n//@ts-ignore\nimport { gethashhref } from \"./gethashhref.ts\";\nimport EventEmitterTargetClass from \"@masx200/event-emitter-target\";\nexport function createHashRouter(): Router {\n    const eventname = \"hashchange\";\n    const emitter = EventEmitterTargetClass();\n\n    const changelistener = () => {\n        const hashparams = gethashparams();\n        instance.emit(\"params\", hashparams);\n    };\n\n    window.addEventListener(eventname, changelistener);\n\n    const router = {\n        href: gethashhref,\n\n        set: sethashparams,\n        get: gethashparams,\n        transform: transformhashparams,\n        [Symbol.toStringTag]: \"HashRouter\",\n        routes: [],\n    };\n    const instance: Router = (() => {\n        const ins = {};\n        const objarr = [emitter, router];\n\n        objarr.forEach((obj) => {\n            Reflect.ownKeys(obj).forEach((key) => {\n                Reflect.set(ins, key, Reflect.get(obj, key));\n            });\n        });\n\n        return ins as Router;\n    })();\n\n    return instance as Router;\n}\n","import { Router } from \"../../createrouter/Router\";\nexport function createReactLink({\n    router,\n    forwardRef,\n    createElement,\n}: {\n    router: Router;\n    forwardRef: typeof import(\"react\").forwardRef;\n    createElement: typeof import(\"react\").createElement;\n}) {\n    console.log(router, forwardRef, createElement);\n    return forwardRef<\n        unknown,\n        {\n            component?: string | import(\"react\").ComponentType<any>;\n            target?: string;\n            onClick?: (event: import(\"react\").MouseEvent) => void;\n            to:\n                | Record<string, string>\n                | ((old: Record<string, string>) => Record<string, string>);\n        }\n    >(\n        (\n            {\n                component: Component = \"a\",\n                to,\n                onClick,\n                children,\n                target,\n                ...rest\n            },\n            forwardedRef\n        ) => {\n            const href: string = router.href(to);\n            const newclick = (event: import(\"react\").MouseEvent) => {\n                try {\n                    if (onClick) {\n                        onClick(event);\n                    }\n                } catch (ex) {\n                    event.preventDefault();\n                    throw ex;\n                }\n                if (\n                    !event.defaultPrevented &&\n                    // onClick prevented default\n                    event.button === 0 &&\n                    // ignore everything but left clicks\n                    (!target || target === \"_self\") &&\n                    // let browser handle \"target=_blank\" etc.\n                    !isModifiedEvent(event)\n                    // ignore clicks with modifier keys\n                ) {\n                    event.preventDefault();\n                    navigate(router, to);\n                }\n            };\n            const props = {\n                ...rest,\n                ref: forwardedRef,\n                href,\n                onClick: newclick,\n                target,\n            };\n            return <Component {...props}>{children}</Component>;\n        }\n    );\n}\nfunction isModifiedEvent(event: import(\"react\").MouseEvent) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction navigate(\n    router: Router,\n    to:\n        | Record<string, string>\n        | ((old: Record<string, string>) => Record<string, string>)\n) {\n    if (!to) {\n        throw new TypeError(to);\n    }\n    if (\"function\" === typeof to) {\n        router.transform(to);\n        return;\n    }\n    if (\"object\" === typeof to) {\n        router.set(to);\n        return;\n    }\n    throw new TypeError(to);\n}\n","//@ts-ignore\n\nimport { getsearchhref } from \"./getsearchhref.ts\";\n//@ts-ignore\nimport { getsearchparams } from \"./getsearchparams.ts\"; //@ts-ignore\nimport { Router } from \"../Router\";\n//@ts-ignore\nimport { setsearchparams } from \"./setsearchparams.ts\"; //@ts-ignore\nimport { transformsearchparams } from \"./transformsearchparams.ts\";\n\nimport EventEmitterTargetClass from \"@masx200/event-emitter-target\";\nexport function createSearchRouter(): Router {\n    const eventname = \"popstate\";\n\n    const emitter = EventEmitterTargetClass();\n\n    \n    const changelistener = () => {\n        const searchparams = getsearchparams();\n        instance.emit(\"params\", searchparams);\n    };\n\n    window.addEventListener(eventname, changelistener);\n    const router = {\n        href: getsearchhref,\n\n        set: setsearchparams,\n        get: getsearchparams,\n        transform: transformsearchparams,\n        [Symbol.toStringTag]: \"SearchRouter\",\nroutes:[]\n    };\n\n    const instance: Router = (() => {\n        const ins = {};\n        const objarr = [emitter,  router];\n\n        objarr.forEach((obj) => {\n            Reflect.ownKeys(obj).forEach((key) => {\n                Reflect.set(ins, key, Reflect.get(obj, key));\n            });\n        });\n\n        return ins as Router;\n    })();\n\n    return instance as Router;\n}\n"],"names":["sethashparams","opt","oldhash","location","hash","url","URL","href","String","URLSearchParams","history","pushState","window","dispatchEvent","Event","gethashparams","Object","fromEntries","slice","transformhashparams","gethashhref","to","TypeError","params","toprimitive","toString","call","Symbol","toStringTag","getsearchparams","search","searchParams","getsearchhref","setsearchparams","oldsearch","transformsearchparams","emitter","EventEmitterTargetClass","addEventListener","hashparams","instance","emit","router","set","get","transform","routes","ins","forEach","obj","Reflect","ownKeys","key","forwardRef","createElement","component","Component","onClick","children","target","rest","forwardedRef","props","ref","event","ex","preventDefault","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","navigate","searchparams"],"mappings":"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"}